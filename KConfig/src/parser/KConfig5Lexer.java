package parser;
// Generated from KConfig5.g4 by ANTLR 4.5
import org.antlr.v4.runtime.Lexer;
import org.antlr.v4.runtime.CharStream;
import org.antlr.v4.runtime.Token;
import org.antlr.v4.runtime.TokenStream;
import org.antlr.v4.runtime.*;
import org.antlr.v4.runtime.atn.*;
import org.antlr.v4.runtime.dfa.DFA;
import org.antlr.v4.runtime.misc.*;

@SuppressWarnings({"all", "warnings", "unchecked", "unused", "cast"})
public class KConfig5Lexer extends Lexer {
	static { RuntimeMetaData.checkVersion("4.5", RuntimeMetaData.VERSION); }

	protected static final DFA[] _decisionToDFA;
	protected static final PredictionContextCache _sharedContextCache =
		new PredictionContextCache();
	public static final int
		T__0=1, T__1=2, T__2=3, T__3=4, T__4=5, T__5=6, T__6=7, T__7=8, T__8=9, 
		CONFIG=10, MENUCONFIG=11, CHOICE=12, ENDCHOICE=13, COMMENT=14, MENU=15, 
		ENDMENU=16, MAINMENU=17, SOURCE=18, DEPENDS=19, ON=20, PROMPT=21, OPTION=22, 
		SELECT=23, DEFAULT=24, RANGE=25, OPTIONAL=26, IF=27, ENDIF=28, ENV=29, 
		DEFCONFIG_LIST=30, TRISTATE=31, BOOL=32, BOOLEAN=33, INT=34, STRING=35, 
		HEX=36, ALLNOCONFIG_Y=37, MODULES=38, VISIBLE=39, Reserved_words=40, SYMBOL=41, 
		WORD_QUOTE=42, SLASH=43, DASH=44, DASHES=45, NEWLINE=46, WS=47;
	public static String[] modeNames = {
		"DEFAULT_MODE"
	};

	public static final String[] ruleNames = {
		"T__0", "T__1", "T__2", "T__3", "T__4", "T__5", "T__6", "T__7", "T__8", 
		"CONFIG", "MENUCONFIG", "CHOICE", "ENDCHOICE", "COMMENT", "MENU", "ENDMENU", 
		"MAINMENU", "SOURCE", "DEPENDS", "ON", "PROMPT", "OPTION", "SELECT", "DEFAULT", 
		"RANGE", "OPTIONAL", "IF", "ENDIF", "ENV", "DEFCONFIG_LIST", "TRISTATE", 
		"BOOL", "BOOLEAN", "INT", "STRING", "HEX", "ALLNOCONFIG_Y", "MODULES", 
		"VISIBLE", "Reserved_words", "SYMBOL", "WORD_QUOTE", "ESC", "SLASH", "DASH", 
		"DASHES", "HELP_WS", "NEWLINE", "WS"
	};

	private static final String[] _LITERAL_NAMES = {
		null, "';'", "'='", "'TODO'", "'!'", "'||'", "'&&'", "'!='", "'('", "')'", 
		"'config'", "'menuconfig'", "'choice'", "'endchoice'", "'comment'", "'menu'", 
		"'endmenu'", "'mainmenu'", "'source'", "'depends'", "'on'", "'prompt'", 
		"'option'", "'select'", null, "'range'", "'optional'", "'if'", "'endif'", 
		"'env'", "'defconfig_list'", "'tristate'", "'bool'", "'boolean'", "'int'", 
		"'string'", "'hex'", "'allnoconfig_y'", "'modules'", "'visible'", null, 
		null, null, "'\\'"
	};
	private static final String[] _SYMBOLIC_NAMES = {
		null, null, null, null, null, null, null, null, null, null, "CONFIG", 
		"MENUCONFIG", "CHOICE", "ENDCHOICE", "COMMENT", "MENU", "ENDMENU", "MAINMENU", 
		"SOURCE", "DEPENDS", "ON", "PROMPT", "OPTION", "SELECT", "DEFAULT", "RANGE", 
		"OPTIONAL", "IF", "ENDIF", "ENV", "DEFCONFIG_LIST", "TRISTATE", "BOOL", 
		"BOOLEAN", "INT", "STRING", "HEX", "ALLNOCONFIG_Y", "MODULES", "VISIBLE", 
		"Reserved_words", "SYMBOL", "WORD_QUOTE", "SLASH", "DASH", "DASHES", "NEWLINE", 
		"WS"
	};
	public static final Vocabulary VOCABULARY = new VocabularyImpl(_LITERAL_NAMES, _SYMBOLIC_NAMES);

	/**
	 * @deprecated Use {@link #VOCABULARY} instead.
	 */
	@Deprecated
	public static final String[] tokenNames;
	static {
		tokenNames = new String[_SYMBOLIC_NAMES.length];
		for (int i = 0; i < tokenNames.length; i++) {
			tokenNames[i] = VOCABULARY.getLiteralName(i);
			if (tokenNames[i] == null) {
				tokenNames[i] = VOCABULARY.getSymbolicName(i);
			}

			if (tokenNames[i] == null) {
				tokenNames[i] = "<INVALID>";
			}
		}
	}

	@Override
	@Deprecated
	public String[] getTokenNames() {
		return tokenNames;
	}

	@Override

	public Vocabulary getVocabulary() {
		return VOCABULARY;
	}


	public KConfig5Lexer(CharStream input) {
		super(input);
		_interp = new LexerATNSimulator(this,_ATN,_decisionToDFA,_sharedContextCache);
	}

	@Override
	public String getGrammarFileName() { return "KConfig5.g4"; }

	@Override
	public String[] getRuleNames() { return ruleNames; }

	@Override
	public String getSerializedATN() { return _serializedATN; }

	@Override
	public String[] getModeNames() { return modeNames; }

	@Override
	public ATN getATN() { return _ATN; }

	public static final String _serializedATN =
		"\3\u0430\ud6d1\u8206\uad2d\u4417\uaef1\u8d80\uaadd\2\61\u01d8\b\1\4\2"+
		"\t\2\4\3\t\3\4\4\t\4\4\5\t\5\4\6\t\6\4\7\t\7\4\b\t\b\4\t\t\t\4\n\t\n\4"+
		"\13\t\13\4\f\t\f\4\r\t\r\4\16\t\16\4\17\t\17\4\20\t\20\4\21\t\21\4\22"+
		"\t\22\4\23\t\23\4\24\t\24\4\25\t\25\4\26\t\26\4\27\t\27\4\30\t\30\4\31"+
		"\t\31\4\32\t\32\4\33\t\33\4\34\t\34\4\35\t\35\4\36\t\36\4\37\t\37\4 \t"+
		" \4!\t!\4\"\t\"\4#\t#\4$\t$\4%\t%\4&\t&\4\'\t\'\4(\t(\4)\t)\4*\t*\4+\t"+
		"+\4,\t,\4-\t-\4.\t.\4/\t/\4\60\t\60\4\61\t\61\4\62\t\62\3\2\3\2\3\3\3"+
		"\3\3\4\3\4\3\4\3\4\3\4\3\5\3\5\3\6\3\6\3\6\3\7\3\7\3\7\3\b\3\b\3\b\3\t"+
		"\3\t\3\n\3\n\3\13\3\13\3\13\3\13\3\13\3\13\3\13\3\f\3\f\3\f\3\f\3\f\3"+
		"\f\3\f\3\f\3\f\3\f\3\f\3\r\3\r\3\r\3\r\3\r\3\r\3\r\3\16\3\16\3\16\3\16"+
		"\3\16\3\16\3\16\3\16\3\16\3\16\3\17\3\17\3\17\3\17\3\17\3\17\3\17\3\17"+
		"\3\20\3\20\3\20\3\20\3\20\3\21\3\21\3\21\3\21\3\21\3\21\3\21\3\21\3\22"+
		"\3\22\3\22\3\22\3\22\3\22\3\22\3\22\3\22\3\23\3\23\3\23\3\23\3\23\3\23"+
		"\3\23\3\24\3\24\3\24\3\24\3\24\3\24\3\24\3\24\3\25\3\25\3\25\3\26\3\26"+
		"\3\26\3\26\3\26\3\26\3\26\3\27\3\27\3\27\3\27\3\27\3\27\3\27\3\30\3\30"+
		"\3\30\3\30\3\30\3\30\3\30\3\31\3\31\3\31\3\31\3\31\3\31\3\31\3\31\3\31"+
		"\3\31\3\31\3\31\3\31\3\31\3\31\3\31\3\31\3\31\3\31\3\31\3\31\3\31\3\31"+
		"\3\31\3\31\3\31\3\31\5\31\u0101\n\31\3\32\3\32\3\32\3\32\3\32\3\32\3\33"+
		"\3\33\3\33\3\33\3\33\3\33\3\33\3\33\3\33\3\34\3\34\3\34\3\35\3\35\3\35"+
		"\3\35\3\35\3\35\3\36\3\36\3\36\3\36\3\37\3\37\3\37\3\37\3\37\3\37\3\37"+
		"\3\37\3\37\3\37\3\37\3\37\3\37\3\37\3\37\3 \3 \3 \3 \3 \3 \3 \3 \3 \3"+
		"!\3!\3!\3!\3!\3\"\3\"\3\"\3\"\3\"\3\"\3\"\3\"\3#\3#\3#\3#\3$\3$\3$\3$"+
		"\3$\3$\3$\3%\3%\3%\3%\3&\3&\3&\3&\3&\3&\3&\3&\3&\3&\3&\3&\3&\3&\3\'\3"+
		"\'\3\'\3\'\3\'\3\'\3\'\3\'\3(\3(\3(\3(\3(\3(\3(\3(\3)\3)\3)\3)\3)\3)\3"+
		")\3)\3)\3)\3)\3)\3)\3)\3)\3)\3)\3)\3)\3)\3)\3)\3)\3)\3)\3)\3)\5)\u018c"+
		"\n)\3*\3*\6*\u0190\n*\r*\16*\u0191\3*\6*\u0195\n*\r*\16*\u0196\5*\u0199"+
		"\n*\3+\3+\3+\3+\7+\u019f\n+\f+\16+\u01a2\13+\3+\3+\3+\3+\3+\7+\u01a9\n"+
		"+\f+\16+\u01ac\13+\3+\5+\u01af\n+\3,\3,\3,\3-\3-\3.\3.\3/\3/\3\60\7\60"+
		"\u01bb\n\60\f\60\16\60\u01be\13\60\3\61\5\61\u01c1\n\61\3\61\6\61\u01c4"+
		"\n\61\r\61\16\61\u01c5\3\62\6\62\u01c9\n\62\r\62\16\62\u01ca\3\62\3\62"+
		"\7\62\u01cf\n\62\f\62\16\62\u01d2\13\62\3\62\5\62\u01d5\n\62\3\62\3\62"+
		"\5\u01a0\u01aa\u01d0\2\63\3\3\5\4\7\5\t\6\13\7\r\b\17\t\21\n\23\13\25"+
		"\f\27\r\31\16\33\17\35\20\37\21!\22#\23%\24\'\25)\26+\27-\30/\31\61\32"+
		"\63\33\65\34\67\359\36;\37= ?!A\"C#E$G%I&K\'M(O)Q*S+U,W\2Y-[.]/_\2a\60"+
		"c\61\3\2\6\6\2\60;C\\aac|\4\2..<<\4\2$$))\4\2\13\13\"\"\u0201\2\3\3\2"+
		"\2\2\2\5\3\2\2\2\2\7\3\2\2\2\2\t\3\2\2\2\2\13\3\2\2\2\2\r\3\2\2\2\2\17"+
		"\3\2\2\2\2\21\3\2\2\2\2\23\3\2\2\2\2\25\3\2\2\2\2\27\3\2\2\2\2\31\3\2"+
		"\2\2\2\33\3\2\2\2\2\35\3\2\2\2\2\37\3\2\2\2\2!\3\2\2\2\2#\3\2\2\2\2%\3"+
		"\2\2\2\2\'\3\2\2\2\2)\3\2\2\2\2+\3\2\2\2\2-\3\2\2\2\2/\3\2\2\2\2\61\3"+
		"\2\2\2\2\63\3\2\2\2\2\65\3\2\2\2\2\67\3\2\2\2\29\3\2\2\2\2;\3\2\2\2\2"+
		"=\3\2\2\2\2?\3\2\2\2\2A\3\2\2\2\2C\3\2\2\2\2E\3\2\2\2\2G\3\2\2\2\2I\3"+
		"\2\2\2\2K\3\2\2\2\2M\3\2\2\2\2O\3\2\2\2\2Q\3\2\2\2\2S\3\2\2\2\2U\3\2\2"+
		"\2\2Y\3\2\2\2\2[\3\2\2\2\2]\3\2\2\2\2a\3\2\2\2\2c\3\2\2\2\3e\3\2\2\2\5"+
		"g\3\2\2\2\7i\3\2\2\2\tn\3\2\2\2\13p\3\2\2\2\rs\3\2\2\2\17v\3\2\2\2\21"+
		"y\3\2\2\2\23{\3\2\2\2\25}\3\2\2\2\27\u0084\3\2\2\2\31\u008f\3\2\2\2\33"+
		"\u0096\3\2\2\2\35\u00a0\3\2\2\2\37\u00a8\3\2\2\2!\u00ad\3\2\2\2#\u00b5"+
		"\3\2\2\2%\u00be\3\2\2\2\'\u00c5\3\2\2\2)\u00cd\3\2\2\2+\u00d0\3\2\2\2"+
		"-\u00d7\3\2\2\2/\u00de\3\2\2\2\61\u0100\3\2\2\2\63\u0102\3\2\2\2\65\u0108"+
		"\3\2\2\2\67\u0111\3\2\2\29\u0114\3\2\2\2;\u011a\3\2\2\2=\u011e\3\2\2\2"+
		"?\u012d\3\2\2\2A\u0136\3\2\2\2C\u013b\3\2\2\2E\u0143\3\2\2\2G\u0147\3"+
		"\2\2\2I\u014e\3\2\2\2K\u0152\3\2\2\2M\u0160\3\2\2\2O\u0168\3\2\2\2Q\u018b"+
		"\3\2\2\2S\u0198\3\2\2\2U\u01ae\3\2\2\2W\u01b0\3\2\2\2Y\u01b3\3\2\2\2["+
		"\u01b5\3\2\2\2]\u01b7\3\2\2\2_\u01bc\3\2\2\2a\u01c3\3\2\2\2c\u01d4\3\2"+
		"\2\2ef\7=\2\2f\4\3\2\2\2gh\7?\2\2h\6\3\2\2\2ij\7V\2\2jk\7Q\2\2kl\7F\2"+
		"\2lm\7Q\2\2m\b\3\2\2\2no\7#\2\2o\n\3\2\2\2pq\7~\2\2qr\7~\2\2r\f\3\2\2"+
		"\2st\7(\2\2tu\7(\2\2u\16\3\2\2\2vw\7#\2\2wx\7?\2\2x\20\3\2\2\2yz\7*\2"+
		"\2z\22\3\2\2\2{|\7+\2\2|\24\3\2\2\2}~\7e\2\2~\177\7q\2\2\177\u0080\7p"+
		"\2\2\u0080\u0081\7h\2\2\u0081\u0082\7k\2\2\u0082\u0083\7i\2\2\u0083\26"+
		"\3\2\2\2\u0084\u0085\7o\2\2\u0085\u0086\7g\2\2\u0086\u0087\7p\2\2\u0087"+
		"\u0088\7w\2\2\u0088\u0089\7e\2\2\u0089\u008a\7q\2\2\u008a\u008b\7p\2\2"+
		"\u008b\u008c\7h\2\2\u008c\u008d\7k\2\2\u008d\u008e\7i\2\2\u008e\30\3\2"+
		"\2\2\u008f\u0090\7e\2\2\u0090\u0091\7j\2\2\u0091\u0092\7q\2\2\u0092\u0093"+
		"\7k\2\2\u0093\u0094\7e\2\2\u0094\u0095\7g\2\2\u0095\32\3\2\2\2\u0096\u0097"+
		"\7g\2\2\u0097\u0098\7p\2\2\u0098\u0099\7f\2\2\u0099\u009a\7e\2\2\u009a"+
		"\u009b\7j\2\2\u009b\u009c\7q\2\2\u009c\u009d\7k\2\2\u009d\u009e\7e\2\2"+
		"\u009e\u009f\7g\2\2\u009f\34\3\2\2\2\u00a0\u00a1\7e\2\2\u00a1\u00a2\7"+
		"q\2\2\u00a2\u00a3\7o\2\2\u00a3\u00a4\7o\2\2\u00a4\u00a5\7g\2\2\u00a5\u00a6"+
		"\7p\2\2\u00a6\u00a7\7v\2\2\u00a7\36\3\2\2\2\u00a8\u00a9\7o\2\2\u00a9\u00aa"+
		"\7g\2\2\u00aa\u00ab\7p\2\2\u00ab\u00ac\7w\2\2\u00ac \3\2\2\2\u00ad\u00ae"+
		"\7g\2\2\u00ae\u00af\7p\2\2\u00af\u00b0\7f\2\2\u00b0\u00b1\7o\2\2\u00b1"+
		"\u00b2\7g\2\2\u00b2\u00b3\7p\2\2\u00b3\u00b4\7w\2\2\u00b4\"\3\2\2\2\u00b5"+
		"\u00b6\7o\2\2\u00b6\u00b7\7c\2\2\u00b7\u00b8\7k\2\2\u00b8\u00b9\7p\2\2"+
		"\u00b9\u00ba\7o\2\2\u00ba\u00bb\7g\2\2\u00bb\u00bc\7p\2\2\u00bc\u00bd"+
		"\7w\2\2\u00bd$\3\2\2\2\u00be\u00bf\7u\2\2\u00bf\u00c0\7q\2\2\u00c0\u00c1"+
		"\7w\2\2\u00c1\u00c2\7t\2\2\u00c2\u00c3\7e\2\2\u00c3\u00c4\7g\2\2\u00c4"+
		"&\3\2\2\2\u00c5\u00c6\7f\2\2\u00c6\u00c7\7g\2\2\u00c7\u00c8\7r\2\2\u00c8"+
		"\u00c9\7g\2\2\u00c9\u00ca\7p\2\2\u00ca\u00cb\7f\2\2\u00cb\u00cc\7u\2\2"+
		"\u00cc(\3\2\2\2\u00cd\u00ce\7q\2\2\u00ce\u00cf\7p\2\2\u00cf*\3\2\2\2\u00d0"+
		"\u00d1\7r\2\2\u00d1\u00d2\7t\2\2\u00d2\u00d3\7q\2\2\u00d3\u00d4\7o\2\2"+
		"\u00d4\u00d5\7r\2\2\u00d5\u00d6\7v\2\2\u00d6,\3\2\2\2\u00d7\u00d8\7q\2"+
		"\2\u00d8\u00d9\7r\2\2\u00d9\u00da\7v\2\2\u00da\u00db\7k\2\2\u00db\u00dc"+
		"\7q\2\2\u00dc\u00dd\7p\2\2\u00dd.\3\2\2\2\u00de\u00df\7u\2\2\u00df\u00e0"+
		"\7g\2\2\u00e0\u00e1\7n\2\2\u00e1\u00e2\7g\2\2\u00e2\u00e3\7e\2\2\u00e3"+
		"\u00e4\7v\2\2\u00e4\60\3\2\2\2\u00e5\u00e6\7f\2\2\u00e6\u00e7\7g\2\2\u00e7"+
		"\u00e8\7h\2\2\u00e8\u00e9\7c\2\2\u00e9\u00ea\7w\2\2\u00ea\u00eb\7n\2\2"+
		"\u00eb\u0101\7v\2\2\u00ec\u00ed\7f\2\2\u00ed\u00ee\7g\2\2\u00ee\u00ef"+
		"\7h\2\2\u00ef\u00f0\7a\2\2\u00f0\u00f1\7d\2\2\u00f1\u00f2\7q\2\2\u00f2"+
		"\u00f3\7q\2\2\u00f3\u0101\7n\2\2\u00f4\u00f5\7f\2\2\u00f5\u00f6\7g\2\2"+
		"\u00f6\u00f7\7h\2\2\u00f7\u00f8\7a\2\2\u00f8\u00f9\7v\2\2\u00f9\u00fa"+
		"\7t\2\2\u00fa\u00fb\7k\2\2\u00fb\u00fc\7u\2\2\u00fc\u00fd\7v\2\2\u00fd"+
		"\u00fe\7c\2\2\u00fe\u00ff\7v\2\2\u00ff\u0101\7g\2\2\u0100\u00e5\3\2\2"+
		"\2\u0100\u00ec\3\2\2\2\u0100\u00f4\3\2\2\2\u0101\62\3\2\2\2\u0102\u0103"+
		"\7t\2\2\u0103\u0104\7c\2\2\u0104\u0105\7p\2\2\u0105\u0106\7i\2\2\u0106"+
		"\u0107\7g\2\2\u0107\64\3\2\2\2\u0108\u0109\7q\2\2\u0109\u010a\7r\2\2\u010a"+
		"\u010b\7v\2\2\u010b\u010c\7k\2\2\u010c\u010d\7q\2\2\u010d\u010e\7p\2\2"+
		"\u010e\u010f\7c\2\2\u010f\u0110\7n\2\2\u0110\66\3\2\2\2\u0111\u0112\7"+
		"k\2\2\u0112\u0113\7h\2\2\u01138\3\2\2\2\u0114\u0115\7g\2\2\u0115\u0116"+
		"\7p\2\2\u0116\u0117\7f\2\2\u0117\u0118\7k\2\2\u0118\u0119\7h\2\2\u0119"+
		":\3\2\2\2\u011a\u011b\7g\2\2\u011b\u011c\7p\2\2\u011c\u011d\7x\2\2\u011d"+
		"<\3\2\2\2\u011e\u011f\7f\2\2\u011f\u0120\7g\2\2\u0120\u0121\7h\2\2\u0121"+
		"\u0122\7e\2\2\u0122\u0123\7q\2\2\u0123\u0124\7p\2\2\u0124\u0125\7h\2\2"+
		"\u0125\u0126\7k\2\2\u0126\u0127\7i\2\2\u0127\u0128\7a\2\2\u0128\u0129"+
		"\7n\2\2\u0129\u012a\7k\2\2\u012a\u012b\7u\2\2\u012b\u012c\7v\2\2\u012c"+
		">\3\2\2\2\u012d\u012e\7v\2\2\u012e\u012f\7t\2\2\u012f\u0130\7k\2\2\u0130"+
		"\u0131\7u\2\2\u0131\u0132\7v\2\2\u0132\u0133\7c\2\2\u0133\u0134\7v\2\2"+
		"\u0134\u0135\7g\2\2\u0135@\3\2\2\2\u0136\u0137\7d\2\2\u0137\u0138\7q\2"+
		"\2\u0138\u0139\7q\2\2\u0139\u013a\7n\2\2\u013aB\3\2\2\2\u013b\u013c\7"+
		"d\2\2\u013c\u013d\7q\2\2\u013d\u013e\7q\2\2\u013e\u013f\7n\2\2\u013f\u0140"+
		"\7g\2\2\u0140\u0141\7c\2\2\u0141\u0142\7p\2\2\u0142D\3\2\2\2\u0143\u0144"+
		"\7k\2\2\u0144\u0145\7p\2\2\u0145\u0146\7v\2\2\u0146F\3\2\2\2\u0147\u0148"+
		"\7u\2\2\u0148\u0149\7v\2\2\u0149\u014a\7t\2\2\u014a\u014b\7k\2\2\u014b"+
		"\u014c\7p\2\2\u014c\u014d\7i\2\2\u014dH\3\2\2\2\u014e\u014f\7j\2\2\u014f"+
		"\u0150\7g\2\2\u0150\u0151\7z\2\2\u0151J\3\2\2\2\u0152\u0153\7c\2\2\u0153"+
		"\u0154\7n\2\2\u0154\u0155\7n\2\2\u0155\u0156\7p\2\2\u0156\u0157\7q\2\2"+
		"\u0157\u0158\7e\2\2\u0158\u0159\7q\2\2\u0159\u015a\7p\2\2\u015a\u015b"+
		"\7h\2\2\u015b\u015c\7k\2\2\u015c\u015d\7i\2\2\u015d\u015e\7a\2\2\u015e"+
		"\u015f\7{\2\2\u015fL\3\2\2\2\u0160\u0161\7o\2\2\u0161\u0162\7q\2\2\u0162"+
		"\u0163\7f\2\2\u0163\u0164\7w\2\2\u0164\u0165\7n\2\2\u0165\u0166\7g\2\2"+
		"\u0166\u0167\7u\2\2\u0167N\3\2\2\2\u0168\u0169\7x\2\2\u0169\u016a\7k\2"+
		"\2\u016a\u016b\7u\2\2\u016b\u016c\7k\2\2\u016c\u016d\7d\2\2\u016d\u016e"+
		"\7n\2\2\u016e\u016f\7g\2\2\u016fP\3\2\2\2\u0170\u018c\5\25\13\2\u0171"+
		"\u018c\5\27\f\2\u0172\u018c\5\'\24\2\u0173\u018c\5)\25\2\u0174\u018c\5"+
		"\61\31\2\u0175\u018c\5\63\32\2\u0176\u018c\5\65\33\2\u0177\u018c\5+\26"+
		"\2\u0178\u018c\5-\27\2\u0179\u018c\5/\30\2\u017a\u018c\5\67\34\2\u017b"+
		"\u018c\59\35\2\u017c\u018c\5;\36\2\u017d\u018c\5=\37\2\u017e\u018c\5\31"+
		"\r\2\u017f\u018c\5\33\16\2\u0180\u018c\5\35\17\2\u0181\u018c\5\37\20\2"+
		"\u0182\u018c\5!\21\2\u0183\u018c\5%\23\2\u0184\u018c\5#\22\2\u0185\u018c"+
		"\5? \2\u0186\u018c\5A!\2\u0187\u018c\5C\"\2\u0188\u018c\5E#\2\u0189\u018c"+
		"\5G$\2\u018a\u018c\5I%\2\u018b\u0170\3\2\2\2\u018b\u0171\3\2\2\2\u018b"+
		"\u0172\3\2\2\2\u018b\u0173\3\2\2\2\u018b\u0174\3\2\2\2\u018b\u0175\3\2"+
		"\2\2\u018b\u0176\3\2\2\2\u018b\u0177\3\2\2\2\u018b\u0178\3\2\2\2\u018b"+
		"\u0179\3\2\2\2\u018b\u017a\3\2\2\2\u018b\u017b\3\2\2\2\u018b\u017c\3\2"+
		"\2\2\u018b\u017d\3\2\2\2\u018b\u017e\3\2\2\2\u018b\u017f\3\2\2\2\u018b"+
		"\u0180\3\2\2\2\u018b\u0181\3\2\2\2\u018b\u0182\3\2\2\2\u018b\u0183\3\2"+
		"\2\2\u018b\u0184\3\2\2\2\u018b\u0185\3\2\2\2\u018b\u0186\3\2\2\2\u018b"+
		"\u0187\3\2\2\2\u018b\u0188\3\2\2\2\u018b\u0189\3\2\2\2\u018b\u018a\3\2"+
		"\2\2\u018cR\3\2\2\2\u018d\u018f\7/\2\2\u018e\u0190\4\62;\2\u018f\u018e"+
		"\3\2\2\2\u0190\u0191\3\2\2\2\u0191\u018f\3\2\2\2\u0191\u0192\3\2\2\2\u0192"+
		"\u0199\3\2\2\2\u0193\u0195\t\2\2\2\u0194\u0193\3\2\2\2\u0195\u0196\3\2"+
		"\2\2\u0196\u0194\3\2\2\2\u0196\u0197\3\2\2\2\u0197\u0199\3\2\2\2\u0198"+
		"\u018d\3\2\2\2\u0198\u0194\3\2\2\2\u0199T\3\2\2\2\u019a\u01a0\7)\2\2\u019b"+
		"\u019f\5W,\2\u019c\u019f\t\3\2\2\u019d\u019f\13\2\2\2\u019e\u019b\3\2"+
		"\2\2\u019e\u019c\3\2\2\2\u019e\u019d\3\2\2\2\u019f\u01a2\3\2\2\2\u01a0"+
		"\u01a1\3\2\2\2\u01a0\u019e\3\2\2\2\u01a1\u01a3\3\2\2\2\u01a2\u01a0\3\2"+
		"\2\2\u01a3\u01af\7)\2\2\u01a4\u01aa\7$\2\2\u01a5\u01a9\5W,\2\u01a6\u01a9"+
		"\t\3\2\2\u01a7\u01a9\13\2\2\2\u01a8\u01a5\3\2\2\2\u01a8\u01a6\3\2\2\2"+
		"\u01a8\u01a7\3\2\2\2\u01a9\u01ac\3\2\2\2\u01aa\u01ab\3\2\2\2\u01aa\u01a8"+
		"\3\2\2\2\u01ab\u01ad\3\2\2\2\u01ac\u01aa\3\2\2\2\u01ad\u01af\7$\2\2\u01ae"+
		"\u019a\3\2\2\2\u01ae\u01a4\3\2\2\2\u01afV\3\2\2\2\u01b0\u01b1\7^\2\2\u01b1"+
		"\u01b2\t\4\2\2\u01b2X\3\2\2\2\u01b3\u01b4\7^\2\2\u01b4Z\3\2\2\2\u01b5"+
		"\u01b6\7/\2\2\u01b6\\\3\2\2\2\u01b7\u01b8\7/\2\2\u01b8^\3\2\2\2\u01b9"+
		"\u01bb\t\5\2\2\u01ba\u01b9\3\2\2\2\u01bb\u01be\3\2\2\2\u01bc\u01ba\3\2"+
		"\2\2\u01bc\u01bd\3\2\2\2\u01bd`\3\2\2\2\u01be\u01bc\3\2\2\2\u01bf\u01c1"+
		"\7\17\2\2\u01c0\u01bf\3\2\2\2\u01c0\u01c1\3\2\2\2\u01c1\u01c2\3\2\2\2"+
		"\u01c2\u01c4\7\f\2\2\u01c3\u01c0\3\2\2\2\u01c4\u01c5\3\2\2\2\u01c5\u01c3"+
		"\3\2\2\2\u01c5\u01c6\3\2\2\2\u01c6b\3\2\2\2\u01c7\u01c9\t\5\2\2\u01c8"+
		"\u01c7\3\2\2\2\u01c9\u01ca\3\2\2\2\u01ca\u01c8\3\2\2\2\u01ca\u01cb\3\2"+
		"\2\2\u01cb\u01d5\3\2\2\2\u01cc\u01d0\7%\2\2\u01cd\u01cf\13\2\2\2\u01ce"+
		"\u01cd\3\2\2\2\u01cf\u01d2\3\2\2\2\u01d0\u01d1\3\2\2\2\u01d0\u01ce\3\2"+
		"\2\2\u01d1\u01d3\3\2\2\2\u01d2\u01d0\3\2\2\2\u01d3\u01d5\7\f\2\2\u01d4"+
		"\u01c8\3\2\2\2\u01d4\u01cc\3\2\2\2\u01d5\u01d6\3\2\2\2\u01d6\u01d7\b\62"+
		"\2\2\u01d7d\3\2\2\2\23\2\u0100\u018b\u0191\u0196\u0198\u019e\u01a0\u01a8"+
		"\u01aa\u01ae\u01bc\u01c0\u01c5\u01ca\u01d0\u01d4\3\b\2\2";
	public static final ATN _ATN =
		new ATNDeserializer().deserialize(_serializedATN.toCharArray());
	static {
		_decisionToDFA = new DFA[_ATN.getNumberOfDecisions()];
		for (int i = 0; i < _ATN.getNumberOfDecisions(); i++) {
			_decisionToDFA[i] = new DFA(_ATN.getDecisionState(i), i);
		}
	}
}